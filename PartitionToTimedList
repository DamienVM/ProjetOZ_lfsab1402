declare
fun {PartitionToTimedList Partition}
   local
      
      fun {NoteToExtended Note}
	 case Note
	 of Name#Octave then
	    note(name:Name octave:Octave sharp:true duration:1.0 instrument:none)
	 [] Atom then
	    case {AtomToString Atom}
	    of [_] then
	       note(name:Atom octave:4 sharp:false duration:1.0 instrument:none)
	    [] [N O] then
	       note(name:{StringToAtom [N]}
		    octave:{StringToInt [O]}
		    sharp:false
		    duration:1.0
		    instrument: none)
	    else
	       silence(duration:1.0)
	    end
	 end
      end

      fun {ChordToExtended Chord}
	 case Chord
	 of nil then nil
	 [] H|T then {NoteToExtended H}|{ChordToExtended T}
	 end
      end

      fun {IsExtanded N}
	 case N
	 of silence then true
	 [] note then true
	 [] H|T then {IsExtanded H}
	 else false
	 end
      end

      
   in
      case Partition
      of nil then nil
      [] H|T then
	 if {IsExtanded H} then
	    H|{PartitionToTimedList T}
	 end
      end
   end
end